idx
colMeans(dat[idx,])
dat.avg["a",]
dat.avg2["symbola",]
quantile(dat.avg-2*dat.avg2[paste0("symbol", rownames(dat.avg)),])
library(matrixStats)
dat.avg2 <- sapply(genes, function(gene) {
rowMeans(dat[probes$symbol == gene,], na.rm=T)
})
dat.avg2 <- t(dat.avg)
quantile(dat.avg-dat.avg2)
dat.avg2 <- sapply(genes, function(gene) {
rowMeans(dat[probes$symbol == gene,], na.rm=T)
})
dat.avg2 <- t(dat.avg2)
quantile(dat.avg-2*dat.avg2[paste0("symbol", rownames(dat.avg)),])
quantile(dat.avg-dat.avg2)
class(dat.avg)
class(dat.avg2)
dim(dat.avg)
dim(dat.avg2)
library(matrixStats)
dat.avg2 <- sapply(genes, function(gene) {
colMeans(dat[probes$symbol == gene,], na.rm=T)
})
dat.avg2 <- t(dat.avg2)
quantile(dat.avg-dat.avg2)
?by
x <- by(dat, as.factor(genes), colMeans)
x <- by(dat, as.factor(probes$symbol), colMeans)
class(x)
names(x)
sapply(x, length)
y <- as.matrix(x)
dim(y)
class(x)
identity
dat.avg3 <- sapply(dat.avg3, identity)
dat.avg3 <- by(dat, as.factor(probes$symbol), colMeans)
dat.avg3 <- sapply(dat.avg3, identity)
dim(dat.avg3)
dim(dat.avg)
dat.avg3 <- by(dat, as.factor(probes$symbol), colMeans)
dat.avg3 <- do.call(rbind, dat.avg3)
dim(dat.avg3)
quantile(dat.avg3-dat.avg2)
dim(dat.avg3)
dim(dat.avg2)
dat.avg3[,1:5]
dat.avg2[,1:5]
genes <- sort(unique(probes$symbol))
dat.avg <- sapply(genes, function(gene) {
apply(dat[probes$symbol == gene,],2,mean,na.rm=T)
})
dat.avg <- t(dat.avg)
## option 2
library(matrixStats)
dat.avg2 <- sapply(genes, function(gene) {
colMeans(dat[probes$symbol == gene,], na.rm=T)
})
dat.avg2 <- t(dat.avg2)
quantile(dat.avg-dat.avg2)
## option 3
dat.avg3 <- by(dat, as.factor(probes$symbol), colMeans)
dat.avg3 <- do.call(rbind, dat.avg3)
quantile(dat.avg-dat.avg3)
library(journalclub)
x <- journalclub.annotate(c("30863553","31552803","31779622"))
dim(x)
x[1,]
library(devtools)
install_github("perishky/journalclub")
q()
library(devtools)
install_github("perishky/journalclub")
x <- journalclub.annotate(c("30863553","31552803","31779622"))
library(journalclub)
x <- journalclub.annotate(c("30863553","31552803","31779622"))
getwd()
x <- read.csv("./GitHub/perishky.github.io/r/introduction/bmi.csv")
dat <- x
x[1:5,]
dim(x)
mean(dat$bmi)
summary(dat)
summary(dat$bmi)
plot(bmi, age, dat)
dat[1,]
plot(bmi, age, data=dat, pch=19)
plot(dat$bmi, dat$age, pch=19)
plot(dat$age, dat$bmi, pch=19)
dat$bmi <- scale(dat$age) + 27 + rnorm(nrow(dat))
plot(dat$age, dat$bmi, pch=19)
write.csv(dat, file="./GitHub/perishky.github.io/r/introduction/bmi.csv", row.names=F)
dat <- read.csv("./GitHub/perishky.github.io/r/introduction/bmi.csv")
dim(dat)
dat[1:10,]
dat[1,]
plot(desnity(dat$age))
hist(dat$age)
mean(dat$age)
dat$bmi <- 27 + scale(dat$age) + sign(dat$sex == "M") + dat$diet + rnorm(nrow(dat))
dat$bmi
dat$bmi <- NULL
dat[1:5,]
write.csv(dat, file="./GitHub/perishky.github.io/r/introduction/samples.csv", row.names=F)
dat$bmi <- 27 + scale(dat$age) + sign(dat$sex == "M") + dat$diet + rnorm(nrow(dat))
write.csv(dat, file="./GitHub/perishky.github.io/r/introduction/bmi.csv", row.names=F)
quantile(dat$bmi)
mean(dat$age)
quantile(dat$age)
mean(dat$bmi[dat$age >= 25 & dat$age <= 34])
mean(dat$bmi[dat$age >= 35 & dat$age <= 44])
mean(dat$bmi[dat$age >= 45 & dat$age <= 55])
mean(dat$bmi[dat$age >= 25 & dat$age <= 34 & dat$sex == "M"])
mean(dat$bmi[dat$age >= 25 & dat$age <= 34 & dat$sex == "F"])
mean(dat$bmi[dat$age >= 35 & dat$age <= 45 & dat$sex == "F"])
mean(dat$bmi[dat$age >= 35 & dat$age <= 44 & dat$sex == "M"])
lm(bmi ~ sex + age + diet, data=dat)
coef(summary(lm(bmi ~ sex + age + diet, data=dat))
)
sign(dat$sex == "M")
dat[1:5,]
dat[1:10,]
dat$bmi
class(dat)
class(dat$bmi)
dat <- read.csv(dat, file="./GitHub/perishky.github.io/r/introduction/bmi.csv")
dat <- read.csv("./GitHub/perishky.github.io/r/introduction/bmi.csv")
dat[1:5,]
dat$bmi
dat$bmi[1:5]
dat[5,]
mean(dat$bmi)
median(dat$bmi)
sd(dat$bmi)
min(dat$bmi)
max(dat$bmi)
quantile(dat$bmi, probs=0.25)
table(dat$sex)
summary(dat$bmi)
summary(dat)
cor(dat$bmi, dat$age)
fit <- lm(bmi~age, data=dat)
fit
plot(dat$age, dat$bmi, pch=19)
abline(fit,col="red", lwd=3)
17.6770+0.3118*29
17.6770+41*0.3118
summary(fit)
fit <- lm(bmi ~ age + sex + diet, data=dat)
summary(fit)
coef(fit)
coef(summary(fit))
coef(summary(fit))["age","Estimate"]
summary(fit)$coefficients
summary(fit)$adj.r.squared
names(summary(fit))
fit <- lm(bmi ~ age + sex + diet, data=dat)
plot(dat$age, dat$bmi, main="age vs BMI", xlab="age", ylab="BMI")
fit <- lm(bmi~age, data=dat)
abline(fit, col="red", lwd=3)
plot(dat$age, dat$bmi, main="age vs BMI", xlab="age", ylab="BMI")
hist(dat$bmi)
hist(dat$bmi, main="BMI")
boxplot(bmi ~ diet, data=dat)
png(filename="boxplot.png", width=10, height=10, units="cm", res=500)
boxplot(bmi~diet, data=dat)
dev.off()
install.packages("rmarkdown")
help("Hmisc")
help("Hmisc")
help(Hmisc)
install.packages("Hmisc")
help(Hmisc)
help("Hmisc")
library(Hmisc)
help("Hmisc")
help(Hmisc)
help(ggplot2)
help(markdown)
library(markdown)
q()
n
install.packages("markdown")
library(markdown)
library(Hmiscr)
help(Hmisc)
help(rmarkdown)
! 3 < 2
3 < 2
m <- cbind(a=c(1,3,5), b=c(2,2,6))
m
t(m)
solve(m)
m <- cbind(c1=c(1,3,5), c2=c(2,2,6), c3=c(3,1,7))
m
t(m)
solve(m)
m <- cbind(c1=c(1,3,5), c2=c(2,2,6), c3=c(3,1,4))
solve(m)
m <- cbind(c1=c(1,3,5), c2=c(2,2,6), c3=c(3,1,4))
t(m)
m <- cbind(c1=c(1,3,5), c2=c(2,2,6), c3=c(3,1,4))
m
t(m)
solve(m)
m *%* solve(m)
m %*% solve(m)
colnames(m)
rownames(m)
dim(m)
euclidean.norm <- function(x) {
res <- x^2
res <- sqrt(res)
return(res)
}
euclidean.norm(c(2,3))
euclidean.norm <- function(x) {
res <- sqrt(sum(x^2))
return(res)
}
euclidean.norm(c(2,3,5))
euclidean.norm(c(2,3,6))
euclidean.norm(c(2,3,6,9))
euclidean.norm(c(2,3,6,10))
euclidean.norm(c(2,3,6,11))
euclidean.norm(c(2,3,6,12))
euclidean.norm(c(2,3,6,13))
euclidean.norm(c(2,3,6,14))
euclidean.norm(c(2,3,6,15))
sapply(1:100, function(x) euclidean.norm(c(2,3,6,x)))
sapply(1:100, function(x) euclidean.norm(c(2,3,6,100+x)))
sapply(1:100, function(x) euclidean.norm(c(2,3,6,200+x)))
sapply(1:100, function(x) euclidean.norm(c(2,3,6,300+x)))
sapply(1:100, function(x) euclidean.norm(c(2,3,6,400+x)))
sapply(1:100, function(x) euclidean.norm(c(2,3,6,500+x)))
sapply(1:100, function(x) euclidean.norm(c(2,3,x)))
sapply(1:100, function(x) euclidean.norm(c(2,3,100+x)))
sapply(1:100, function(x) euclidean.norm(c(2,3,100+x)))
sapply(1:100, function(x) euclidean.norm(c(2,4,x)))
sapply(1:100, function(x) euclidean.norm(c(1,4,x)))
euclidean.norm(c(1,4,8))
euclidean.norm(c(3,4))
library(Hmisc)
Cs(a,cat,dog)
describe(1:5)
summary(1:5)
describe(c(1,1,2,1,3,5,1,3,5,2,3,4))
x <- readLines("C:\Users\ms13525\Downloads\pubmed-suderman-set.txt")
x <- readLines("C:/Users/ms13525/Downloads/pubmed-suderman-set.txt")
length(x)
x <- x[grep("PMID", x)]
length(x)
x[1:5]
x <- sub("PMID- ", "", x)
x[1:5]
writeLines(x, con="C:/Users/ms13525/Downloads/pubmed.txt")
x[1:20]
x <- readLines("C:/Users/ms13525/Downloads/pubmed-suderman-set.txt")
x <- x[grep("PMID- ", x)]
x <- sub("PMID- ", "", x)
length(x)
x[1:5]
writeLines(x, con="C:/Users/ms13525/Downloads/pubmed.txt")
paste(x[1:20], collapse=",")
paste(x[-(1:20)], collapse=",")
paste(21:60, collapse=",")
paste(x[21:60], collapse=",")
paste(x[61:length(x)], collapse=",")
x <- "x,y,z
1,2,F
3,4,F
5,6,F
7,8,F
9,9,F""
9,9,F""
x
x <- "x,y,z
1,2,F
3,4,F"
y <- read.csv(text=x)
y
y$z
?read.csv
read.csv
read.table
type.convert
type.convert(c("F","F","F"))
?type.convert
type.convert
y
y$z
is.logical(y$z)
is.logical(c(y$z,NA))
apply(y, 2, is.logical)
as.character(y$z)
as.character(c(y$z,NA)
)
as.character(NA)
class(as.character(NA))
is.na(as.character(NA))
substring(as.character(c(y$z,NA)), 1,1)
5+2+0.6+0.15
5/7.75
2/7.75
0.6/7.75
0.15/7.75
counts <- c(gran=0.6, mono=0.1, cd4t=0.12, cd8t=0.1, bcell=0.03, nkt=0.05)
sum(counts)
m <- matrix(counts, ncol=length(counts), nrow=4, byrow=T)
m
colnames(m) <- names(counts)
m
rownames(m) <- c("sample1", "sample2", "sample3", "sample4")
new <- m
old <- m
new
old
rnorm(length(old), sd=0.1)
rnorm(length(old), sd=0.01)
old <- old + rnorm(length(old), sd=0.02)
odl
old
old[,"gran"] <- 1-rowSums(old[,-1])
old
rowSums(old)
colsums(old)
colSums(old)
old
new
library(matrixStats)
rowCors(old, new)
rowCor
sapply(rownames(old), function(s) cor(old[s,], new[s,]))
sapply(colnames(old), function(t) cor(old[,t], new[,t]))
library(devtools)
install_github("perishky/meffil")
getwd90
getwd()
library(markdown)
markdownToHTML("notes.md","notes.html")
list.files()
markdownToHTML("notes.txt","notes.html")
(106.1-46.7)
(106.1-46.7)*0.025
46.7+1.485
1.96*10.7
2.3
72.8-20.972
72.8+20.972
2.71.96*1.6
2.7-1.96*1.6
2.7+1.96*1.6
72.5-1.96*10.7
72.5+1.96*10.7
pnorm(1.96)
pnorm(-1.96)
2.7+1.96*1.6
2.7-1.96*1.6
92.5*0.11
64.4*0.16
getwd()
list.files()
x <- 3
y <- x + 5
x
y
# x and y are important
x <- 3
y <- x + 5
# show me x
print(x)
plot(x,y)
?confint
x <- 3
x <- 3
y <- x + 5
# show me x
print(x)
# show both
plot(x,y)
var(c(1,3))
var
sd
var(1)
var(c(1,2))
var(c(1,2,3))
3*3
16/3
library(meffil)
library(devtools)
library(limma)
normexp.signal
x <- read.csv("candidates.csv")
x[1,]
x$abstract <- NULL
x[1,]
x$X <- NULL
x <- read.csv("candidates.csv")
x[1,]
library(knitr)
kable(x)
library(knitr)
x <- read.csv("candidates.csv")
kable(x)
library(geograbi)
colnames(x)
colnames(x)
class(x)
x[1,]
colnames(x)
x <- geograbi::geograbi.get.samples("GSE134089")
x[1,]
x$characteristics_ch1[1]
x$characteristics_ch1.2
table(x$characteristics_ch1.2)
with(x, table(characteristic_ch1.1, characteristic_ch1.2))
with(x, table(characteristic_ch, characteristic_ch1.2))
with(x, table(characteristic_ch1, characteristic_ch1.2))
x[1,]
colnames(x)
with(x, table(characteristics_ch1, characteristics_ch1.2))
with(x, table(characteristics_ch1.1, characteristics_ch1.2))
table(x$characteristics_ch1.1)
x <- matrix(sample(c(T,F),size=15, replace=T), ncol=3)
x
all(x)
apply(x, 2, function(x) all(x==3))
1414/473864
53-36
library(meffil)
library(R2MLwiN)
install.packages(R2MLwiN)
install.packages("R2MLwiN")
library(R2MLwiN)
library(R2MLwiN)
mlwin <- getOption("MLwiN_path")
while (!file.access(mlwin, mode = 1) == 0) {
cat("Please specify the root MLwiN folder or the full path to the MLwiN executable:\n")
mlwin <- scan(what = character(0), sep = "\n")
mlwin <- gsub("\\", "/", mlwin, fixed = TRUE)
}
mlwin
options(MLwiN_path = mlwin)
data(reading1, package = "R2MLwiN")
summary(reading1)
reading1[reading1 == -10] <- NA
summary(reading1)
reading <- reshape(reading1, idvar = "student", timevar = "id", varying = c("read1", "age1", "read2", "age2", "read3",
"age3", "read4", "age4", "read5", "age5", "read6", "age6"), sep = "", direction = "long")
reading <- reading[c("student", "id", "age", "read")]
reading <- reading[order(reading$student, reading$id), ]
colnames(reading) <- c("student", "occasion", "age", "reading")
rownames(reading) <- NULL
reading <- transform(reading,s1=ifelse(age <0, age, NA))
reading <- transform(reading,s2=ifelse(age >=0, age, NA))
(Mod_reading_age <- runMLwiN(reading ~ 1 + age  + (1 + age|student) + (1|occasion),
estoption = list(resi.store = TRUE),
data = reading))
(Mod_reading_basic <- runMLwiN(reading ~ 1 + s1 + s2  + (1 + s1 + s2|student) + (1|occasion),
estoption = list(resi.store = TRUE),
data = reading))
(Mod_reading <- runMLwiN(reading ~ 1 + s1 + s2  + (1 + s1 + s2|student) + (1|occasion),
estoption = list(resi.store = TRUE, debugmode=T,
reset=c(2, 2), maxiter=150, smat=smat),
data = reading))
(Mod_reading <- runMLwiN(reading ~ 1 + s1 + s2  + (1 + s1 + s2|student) + (1|occasion),
estoption = list(resi.store = TRUE, debugmode=T),
data = reading))
(Mod_reading <- runMLwiN(reading ~ 1 + s1  + (1 + s1|student) + (1|occasion),
estoption = list(resi.store = TRUE, debugmode=T),
data = reading))
(Mod_reading <- runMLwiN(reading ~ 1 + s1  + (1 + s1|student) + (1|occasion),
estoption = list(resi.store = TRUE),
data = reading))
(Mod_reading <- runMLwiN(reading ~ 1 + s2  + (1 + s2|student) + (1|occasion),
estoption = list(resi.store = TRUE),
data = reading))
(Mod_reading <- runMLwiN(reading ~ 1 + s1 +s2 + (1 + s1|student) + (1|occasion),
estoption = list(resi.store = TRUE),
data = reading))
(Mod_reading <- runMLwiN(reading ~ 1 + s1 + (1 + s1+s2|student) + (1|occasion),
estoption = list(resi.store = TRUE),
data = reading))
(Mod_reading <- runMLwiN(reading ~ 1 + s1 + (1 + s1+s2|student) + (1|occasion),
estoption = list(resi.store = TRUE),
data = reading))
(Mod_reading <- runMLwiN(reading ~ 1 + s1  + (1 + s1|student) + (1|occasion),
estoption = list(resi.store = TRUE, debugmode=T),
data = reading))
(Mod_reading <- runMLwiN(reading ~ 1 + s1 + s2  + (1 + s1 + s2|student) + (1|occasion),
estoption = list(resi.store = TRUE, debugmode=T),
data = reading))
(Mod_reading <- runMLwiN(reading ~ 1 + s1 + s2  + (1 + s1 + s2|student) + (1|occasion),
estoption = list(resi.store = TRUE, debugmode=T),
data = reading))
(Mod_reading <- runMLwiN(reading ~ 1 + age + s1  + (1 + age + s1|student) + (1|occasion),
estoption = list(resi.store = TRUE, debugmode=T),
data = reading))
reading[1,]
reading$s1
reading$s2
reading$age
apply(reading, 2, function(x) sum(is.na(x)))
nrow(reading)
sum(!is.na(reading$s1) & !is.na(reading$s2))
sum(!is.na(reading$s1) & !is.na(reading$s2))
setwd("~/GitHub/perishky.github.io/jc/20220111")
library(knitr)
ewas <- read.csv("ewas.csv")
kable(ewas)
